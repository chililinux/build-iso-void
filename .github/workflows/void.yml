name: ISO Build

on:
  repository_dispatch:
    types:
      - "ISO-*"
  workflow_dispatch:
    inputs:
      name:
        type: string
        description: "Name for the ISO"
        required: true
        default: 'voidlinux'

jobs:
  build:
    name: Build ISO ${{ github.event.client_payload.edition || 'Unknown' }}
    runs-on: ubuntu-latest
    container:
      image: vcatafesta/voidlinux-docker:latest
      options: --privileged
      volumes:
        - /mnt/var_lib_manjaro_tools_buildiso:/var/lib/manjaro-tools/buildiso
        - /mnt/var_cache_manjaro_tools_iso:/var/cache/manjaro-tools/iso

    steps:
      - name: Set up volume directory on HOST
        run: |
          mkdir -p /mnt/var_lib_manjaro_tools_buildiso
          mkdir -p /mnt/var_cache_manjaro_tools_iso

      - name: Install Required Libraries
        run: |
          xbps-install -Syu -f \
            xbps \
            sudo \
            tmate \
            openssh \
            vpm \
            libstdc++ \
            vim \
            nano \
            curl \
            git \
            bash \
            xtools \
            tree \
            vpm \
            duf

      - name: Create user builduser
        run: |
          useradd -m -G wheel,audio,video,cdrom,optical,kvm,xbuilder builduser

      - name: Display the current user in container
        run: |
          echo "#########################################"
          echo "Current container is: $(hostname)"
          echo "Current user is: $(whoami)"
          echo "Current user ID is: $(id -u)"
          echo "Current user details:"
          id
          echo "#########################################"
          df -hT
          echo "#########################################"
          ls -la /mnt
          echo "#########################################"

      - name: Initial Debug
        run: |
          echo "Workflow started"
          echo "Event Name: ${{ github.event_name }}"
          echo "Event Action: ${{ github.event.action }}"
          echo "Edition: ${{ github.event.client_payload.edition || inputs.edition }}"
          echo "Tmate from payload: ${{ github.event.client_payload.tmate }}"
          echo "Full github event: ${{ toJson(github.event) }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build ISO
        uses: ./
        id: build
        with:
          name: ${{ github.event.client_payload.name || inputs.name }}
          edition: ${{ github.event.client_payload.edition || inputs.edition }}
          release_tag: ${{ github.event.client_payload.release_tag || inputs.release_tag }}
          kernel: ${{ github.event.client_payload.kernel || inputs.kernel }}
          scope: ${{ github.event.client_payload.scope || inputs.scope }}
          office-chooser: ${{ github.event.client_payload.office-chooser || inputs.office-chooser }}

          # Parâmetros de branches
          manjaro_branch: ${{ github.event.client_payload.manjaro_branch || inputs.manjaro_branch }}
          community_branch: ${{ github.event.client_payload.community_branch || inputs.community_branch }}
          biglinux_branch: ${{ github.event.client_payload.biglinux_branch || inputs.biglinux_branch }}

          # Depuração
          tmate: ${{ github.event.client_payload.tmate || 'false' }}

          # Tokens e segredos
          github_token: ${{ secrets.TOKEN_RELEASE }}

      - name: Set ISO path
        run: echo "ISO_PATH=${{ env.WORK_PATH }}/${{ env.ISO_BASENAME }}" >> $GITHUB_ENV

